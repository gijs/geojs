
import sys
import os

from selenium_test import setUpModule, tearDownModule, makeAllBrowserTest

_urls = []
_baseurl = "@JASMINE_DEPLOY_URL@"

# query for jasmine to be finished (from run-jasmine.js)
_done = ' '.join([
    'return',
    'document.body.querySelector(".symbolSummary .pending") === null &&',
    'document.body.className === "reporter-done";'
])


class JasmineTest(object):

    url = ''

    def test_run(self):

        _url = '/'.join((_baseurl, self.url)) + '.html'
        self.loadURL(_url, relative=False)

        self.wait(function=_done)

        failedElements = self.getElements('.spec-detail.failed')
        allElements = self.getElements('.summary .specs > *')

        if len(failedElements):
            msg = ["\n%i/%i tests failed" % (len(failedElements), len(allElements))]

            for i, el in enumerate(failedElements):
                msg.append(('#%i: ' % (i + 1)) + el.text)

            msg = '\n'.join(msg)
            self.fail(msg)

if __name__ == '__main__':
    _urls = sys.argv[1:]
else:
    _urls = os.environ.get('JASMINE_TESTS', '').split(':')

_urls = [
    '/'.join(os.path.split(url.strip())) for url in _urls if len(url.strip())
]

for url in _urls:
    name = os.path.split(url)[-1]
    name = os.path.splitext(name)[0]
    name = name[0].upper() + name[1:]

    makeAllBrowserTest(JasmineTest, baseName=name, url=url)

if __name__ == '__main__':
    sys.argv = [sys.argv[0]]
    import unittest
    unittest.main()
